"""empty message

Revision ID: 3d0df482e1e5
Revises: b050b1ace35e
Create Date: 2025-03-09 10:23:50.222002

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3d0df482e1e5'
down_revision = 'b050b1ace35e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aggregations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('is_selected', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('aggregations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_aggregations_is_selected'), ['is_selected'], unique=False)
        batch_op.create_index(batch_op.f('ix_aggregations_name'), ['name'], unique=True)

    op.create_table('anonymisations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('footprint_file', sa.String(length=255), nullable=True),
    sa.Column('shuffled_file', sa.String(length=255), nullable=True),
    sa.Column('original_file', sa.String(length=255), nullable=False),
    sa.Column('file_link', sa.String(length=255), nullable=False),
    sa.Column('naive_attack', sa.Float(), nullable=False),
    sa.Column('utility', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='anonymstatus'), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_link'),
    sa.UniqueConstraint('footprint_file'),
    sa.UniqueConstraint('shuffled_file')
    )
    with op.batch_alter_table('anonymisations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_anonymisations_is_published'), ['is_published'], unique=False)
        batch_op.create_index(batch_op.f('ix_anonymisations_name'), ['name'], unique=False)

    op.create_table('metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('is_selected', sa.Boolean(), nullable=False),
    sa.Column('parameters', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('metrics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_metrics_is_selected'), ['is_selected'], unique=False)
        batch_op.create_index(batch_op.f('ix_metrics_name'), ['name'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_metrics_name'))
        batch_op.drop_index(batch_op.f('ix_metrics_is_selected'))

    op.drop_table('metrics')
    with op.batch_alter_table('anonymisations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_anonymisations_name'))
        batch_op.drop_index(batch_op.f('ix_anonymisations_is_published'))

    op.drop_table('anonymisations')
    with op.batch_alter_table('aggregations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_aggregations_name'))
        batch_op.drop_index(batch_op.f('ix_aggregations_is_selected'))

    op.drop_table('aggregations')
    # ### end Alembic commands ###
